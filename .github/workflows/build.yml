name: Publish and Deploy Pipeline

on:
  pull_request:
    types:
      - closed
  push:
    branches:
      - feature
      - dev

jobs:
  Deploying_to_Development:
    if: startsWith(github.ref_name, 'feature/') || github.ref_name == 'dev'
    runs-on: ubuntu-latest
    environment: dev # Associate with the 'dev' environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      - name: Publish to Exchange
        shell: bash
        run: |
          # Extract artifact name from pom.xml
          echo "Extracting artifact name..."
          ARTIFACT_NAME=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
          echo "Extracted Artifact Name: ${ARTIFACT_NAME}"
          
          if [[ -z "${ARTIFACT_NAME}" ]]; then
            echo "Error: Artifact name could not be determined."
            exit 1
          fi

          # Extract GitHub branch name
          echo "Extracting GitHub branch name..."
          BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}")
          echo "Detected GitHub Branch Name: ${BRANCH_NAME}"
          
          # Construct application name
          APPLICATION_NAME="${ARTIFACT_NAME}-${BRANCH_NAME}"
          echo "Final Application Name: ${APPLICATION_NAME}"

          # Publish to Exchange
          mvn deploy --settings .maven/settings.xml -DskipMunitTests \
            -DapplicationName="${APPLICATION_NAME}" \
            -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"


      - name: Build and Deploy to CloudHub
        shell: bash
        run: |
          echo "Deploying to CloudHub with artifact suffix: ${ARTIFACT_NAME}-${GITHUB_REF_NAME}"
          mvn deploy --settings .maven/settings.xml -DskipMunitTests -DmuleDeploy \
            -Dclient.id="${{ secrets.CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.CLIENT_SECRET }}" \
            -Danypoint.platform.client_id="${{ secrets.PLATFORM_CLIENT_ID }}" \
            -Danypoint.platform.client_secret="${{ secrets.PLATFORM_CLIENT_SECRET }}" \
            -DcloudhubEnvironment="${{ secrets.CLOUDHUB_ENVIRONMENT }}" \
            -DapplicationName="${ARTIFACT_NAME}-${{ secrets.ENV }}" \
            -Dtarget="${{ secrets.TARGET }}" \
            -Denv="${{ secrets.ENV }}"

  Deploying_to_UAT:
    if: github.event.pull_request.merged == true && github.ref_name == 'uat'
    runs-on: ubuntu-latest
    environment: uat # Associate with the 'uat' environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      - name: Publish to Exchange
        run: |
          echo "Publishing to Exchange for UAT"
          mvn deploy --settings .maven/settings.xml -DskipMunitTests \
          -Dartifact.name="mc-demo-api-uat" \
          -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
          -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"

      - name: Deploy to UAT
        run: |
          echo "Deploying to UAT environment for branch $GITHUB_REF_NAME"
          mvn deploy --settings .maven/settings.xml -DskipMunitTests -DmuleDeploy \
          -Dclient.id="${{ secrets.CLIENT_ID }}" \
          -Dclient.secret="${{ secrets.CLIENT_SECRET }}" \
          -Danypoint.platform.client_id="${{ secrets.PLATFORM_CLIENT_ID }}" \
          -Danypoint.platform.client_secret="${{ secrets.PLATFORM_CLIENT_SECRET }}"

  Deploying_to_PROD:
    if: github.event.pull_request.merged == true && github.ref_name == 'main'
    runs-on: ubuntu-latest
    environment: prod # Associate with the 'prod' environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      - name: Publish to Exchange
        if: ${{ github.ref_name != 'main' }} # Skip suffix for main
        run: |
          echo "Publishing to Exchange for PROD without suffix"
          mvn deploy --settings .maven/settings.xml -DskipMunitTests \
          -Dartifact.name="mc-demo-api" \
          -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
          -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"

      - name: Deploy to PROD
        run: |
          echo "Deploying to PROD environment for branch $GITHUB_REF_NAME"
          mvn deploy --settings .maven/settings.xml -DskipMunitTests -DmuleDeploy \
          -Dclient.id="${{ secrets.CLIENT_ID }}" \
          -Dclient.secret="${{ secrets.CLIENT_SECRET }}" \
          -Danypoint.platform.client_id="${{ secrets.PLATFORM_CLIENT_ID }}" \
          -Danypoint.platform.client_secret="${{ secrets.PLATFORM_CLIENT_SECRET }}"
