name: Publish and Deploy Pipeline

on:
  push:
    branches:
      - dev
      - uat
      - main
      - feature/*

jobs:
  # Common Publish to Exchange job
  Publish_to_Exchange:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Increment Version
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{$NF += 1 ; print}')
          echo "New version: $NEW_VERSION"
          mvn versions:set -DnewVersion=$NEW_VERSION -DgenerateBackupPoms=false

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})  # Get current branch
          echo "Pushing changes to branch: $BRANCH_NAME"

          git checkout $BRANCH_NAME  # Ensure correct branch
          git pull origin $BRANCH_NAME  # Sync with remote
          git commit -am "chore: Increment POM version to $NEW_VERSION"
          git push origin $BRANCH_NAME  # Push dynamically
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Default Maven Version
        run: mvn -version

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      - name: Publish to Exchange
        shell: bash
        run: |
          echo "Publishing to Exchange"
          mvn clean deploy --settings .maven/settings.xml -DskipMunitTests  \
            -Dclient.id="${{ secrets.DEV_CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.DEV_CLIENT_SECRET }}"

  Deploying_to_Development:
    needs: Publish_to_Exchange
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and Deploy to DEV
        shell: bash
        run: |
          mvn deploy --settings .maven/settings.xml -DskipTests -DmuleDeploy \
            -Dclient.id="${{ secrets.DEV_CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.DEV_CLIENT_SECRET }}" \
            -Danypoint.platform.client_id="${{ secrets.DEV_PLATFORM_CLIENT_ID }}" \
            -Danypoint.platform.client_secret="${{ secrets.DEV_PLATFORM_CLIENT_SECRET }}"

  Deploying_to_UAT:
    needs: Publish_to_Exchange
    if: github.ref == 'refs/heads/uat'
    runs-on: ubuntu-latest
    environment: uat
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and Deploy to UAT
        shell: bash
        run: |
          mvn deploy --settings .maven/settings.xml -DskipTests -DmuleDeploy \
            -Dclient.id="${{ secrets.UAT_CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.UAT_CLIENT_SECRET }}" \
            -Danypoint.platform.client_id="${{ secrets.UAT_PLATFORM_CLIENT_ID }}" \
            -Danypoint.platform.client_secret="${{ secrets.UAT_PLATFORM_CLIENT_SECRET }}"

  Deploying_to_Production:
    needs: Publish_to_Exchange
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and Deploy to PROD
        shell: bash
        run: |
          mvn deploy --settings .maven/settings.xml -DskipTests -DmuleDeploy \
            -Dclient.id="${{ secrets.PROD_CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.PROD_CLIENT_SECRET }}" \
            -Danypoint.platform.client_id="${{ secrets.PROD_PLATFORM_CLIENT_ID }}" \
            -Danypoint.platform.client_secret="${{ secrets.PROD_PLATFORM_CLIENT_SECRET }}"
            -DcloudhubEnvironment="${{ secrets.CLOUDHUBENVIRONMENT }}" \
            -Dtarget="${{ secrets.TARGET }}" \
            -Denv="${{ secrets.ENV }}"
