name: Publish and Deploy Pipeline

on:
  pull_request:
    types:
      - closed
  push:
    branches:
      - dev
      - uat
      - main

jobs:
  Deploying_to_Development:
    if: ${{ github.event.pull_request.merged == true && startsWith(github.ref, 'refs/heads/dev') }}
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      - name: Publish to Exchange
        run: |
          ARTIFACT_SUFFIX="-dev"
          ARTIFACT_NAME=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
          echo "Publishing artifact: ${ARTIFACT_NAME}${ARTIFACT_SUFFIX}"
          mvn deploy --settings .maven/settings.xml -DskipMunitTests \
            -Dartifact.name="${ARTIFACT_NAME}${ARTIFACT_SUFFIX}" \
            -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"

      - name: Deploy to Development
        run: |
          echo "Deploying to DEV environment"
          mvn deploy --settings .maven/settings.xml -DskipMunitTests -DmuleDeploy \
            -Dclient.id="${{ secrets.DEV_CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.DEV_CLIENT_SECRET }}" \
            -Danypoint.platform.client_id="${{ secrets.DEV_PLATFORM_CLIENT_ID }}" \
            -Danypoint.platform.client_secret="${{ secrets.DEV_PLATFORM_CLIENT_SECRET }}" \
            -Denv="${{ secrets.ENV }}" \
            -Dtarget="${{ secrets.TARGET }}"

  Deploying_to_UAT:
    if: ${{ github.event.pull_request.merged == true && startsWith(github.ref, 'refs/heads/uat') }}
    runs-on: ubuntu-latest
    environment: uat
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      - name: Publish to Exchange
        run: |
          ARTIFACT_SUFFIX="-uat"
          ARTIFACT_NAME=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
          echo "Publishing artifact: ${ARTIFACT_NAME}${ARTIFACT_SUFFIX}"
          mvn deploy --settings .maven/settings.xml -DskipMunitTests \
            -Dartifact.name="${ARTIFACT_NAME}${ARTIFACT_SUFFIX}" \
            -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"

      - name: Deploy to UAT
        run: |
          echo "Deploying to UAT environment"
          mvn deploy --settings .maven/settings.xml -DskipMunitTests -DmuleDeploy \
            -Dclient.id="${{ secrets.CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.CLIENT_SECRET }}" \
            -Danypoint.platform.client_id="${{ secrets.PLATFORM_CLIENT_ID }}" \
            -Danypoint.platform.client_secret="${{ secrets.PLATFORM_CLIENT_SECRET }}"

  Deploying_to_PROD:
    if: ${{ github.event.pull_request.merged == true && startsWith(github.ref, 'refs/heads/main') }}
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      - name: Publish to Exchange
        run: |
          ARTIFACT_NAME=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
          echo "Publishing artifact: ${ARTIFACT_NAME}"
          mvn deploy --settings .maven/settings.xml -DskipMunitTests \
            -Dartifact.name="${ARTIFACT_NAME}" \
            -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"

      - name: Deploy to PROD
        run: |
          echo "Deploying to PROD environment"
          mvn deploy --settings .maven/settings.xml -DskipMunitTests -DmuleDeploy \
            -Dclient.id="${{ secrets.CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.CLIENT_SECRET }}" \
            -Danypoint.platform.client_id="${{ secrets.PLATFORM_CLIENT_ID }}" \
            -Danypoint.platform.client_secret="${{ secrets.PLATFORM_CLIENT_SECRET }}"
