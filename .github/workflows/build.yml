name: Publish and Deploy Pipeline

on:
  pull_request:
    types:
      - closed
  push:
    branches:
      - dev
      - uat
      - main

jobs:
  feature-or-dev:
    if: startsWith(github.ref_name, 'feature/') || github.ref_name == 'dev'
    runs-on: ubuntu-latest
    environment: dev # Associate with the 'dev' environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      - name: Publish to Exchange
        run: |
          # Set the default artifact suffix based on the branch
          ARTIFACT_SUFFIX="-dev" # Default suffix for dev
          if [[ "${{ github.ref_name }}" == feature/* ]]; then
            ARTIFACT_SUFFIX="-feature"
          fi

          # Extract the artifact name from pom.xml
          ARTIFACT_NAME=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)

          # Print the artifact name for debugging purposes
          echo "Publishing artifact: $ARTIFACT_NAME$ARTIFACT_SUFFIX"

          # Publish to Exchange
          mvn deploy --settings .maven/settings.xml -DskipMunitTests \
            -Dartifact.name="${ARTIFACT_NAME}${ARTIFACT_SUFFIX}" \
            -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"

      - name: Build and Deploy to Dev
        run: |
          echo "Deploying to DEV environment for branch $GITHUB_REF_NAME"
          mvn deploy --settings .maven/settings.xml -DskipMunitTests -DmuleDeploy \
          -Dclient.id="${{ secrets.DEV_CLIENT_ID }}" \
          -Dclient.secret="${{ secrets.DEV_CLIENT_SECRET }}" \
          -Danypoint.platform.client_id="${{ secrets.DEV_PLATFORM_CLIENT_ID }}" \
          -Danypoint.platform.client_secret="${{ secrets.DEV_PLATFORM_CLIENT_SECRET }}"

  uat:
    if: github.event.pull_request.merged == true && github.ref_name == 'uat'
    runs-on: ubuntu-latest
    environment: uat # Associate with the 'uat' environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      - name: Publish to Exchange
        run: |
          # Set the default artifact suffix for UAT
          ARTIFACT_SUFFIX="-uat"

          # Extract the artifact name from pom.xml
          ARTIFACT_NAME=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)

          # Print the artifact name for debugging purposes
          echo "Publishing artifact: $ARTIFACT_NAME$ARTIFACT_SUFFIX"

          # Publish to Exchange
          mvn deploy --settings .maven/settings.xml -DskipMunitTests \
            -Dartifact.name="${ARTIFACT_NAME}${ARTIFACT_SUFFIX}" \
            -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"


      - name: Deploy to UAT
        run: |
          echo "Deploying to UAT environment for branch $GITHUB_REF_NAME"
          mvn deploy --settings .maven/settings.xml -DskipMunitTests -DmuleDeploy \
          -Dclient.id="${{ secrets.CLIENT_ID }}" \
          -Dclient.secret="${{ secrets.CLIENT_SECRET }}" \
          -Danypoint.platform.client_id="${{ secrets.PLATFORM_CLIENT_ID }}" \
          -Danypoint.platform.client_secret="${{ secrets.PLATFORM_CLIENT_SECRET }}"

  prod:
    if: github.event.pull_request.merged == true && github.ref_name == 'main'
    runs-on: ubuntu-latest
    environment: prod # Associate with the 'prod' environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      - name: Publish to Exchange
        run: |
          # Extract the artifact name from pom.xml
          ARTIFACT_NAME=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)

          # Print the artifact name for debugging purposes
          echo "Publishing artifact: $ARTIFACT_NAME"

          # Publish to Exchange
          mvn deploy --settings .maven/settings.xml -DskipMunitTests \
            -Dartifact.name="$ARTIFACT_NAME" \
            -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"
            
      - name: Deploy to PROD
        run: |
          echo "Deploying to PROD environment for branch $GITHUB_REF_NAME"
          mvn deploy --settings .maven/settings.xml -DskipMunitTests -DmuleDeploy \
          -Dclient.id="${{ secrets.CLIENT_ID }}" \
          -Dclient.secret="${{ secrets.CLIENT_SECRET }}" \
          -Danypoint.platform.client_id="${{ secrets.PLATFORM_CLIENT_ID }}" \
          -Danypoint.platform.client_secret="${{ secrets.PLATFORM_CLIENT_SECRET }}"
